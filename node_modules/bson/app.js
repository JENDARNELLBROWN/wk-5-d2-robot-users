const express = require("express");
const app = express();
const mustacheExpress = require("mustache-express");
//const data = require('./public/data');
var MongoClient = require("mongodb").MongoClient;
var assert = require("assert");
var url = "mongodb://localhost:27017/robot";

app.engine("mustache", mustacheExpress());
app.set("views", "./views");
app.set("view engine", "mustache");
app.use(express.static("public"));

app.get("/:id", function(req, res) {
  var id =+ req.params.id;
  if (id > 0 ) {
  MongoClient.connect(url, function(err, dbConn) {
    assert.equal(null, err);
    findDocById (dbConn, function(data) {
      dbConn.close();
      res.render("directory", { users: data });
    }, id);
  });
}
});

var findDocById = function(dbConn, callback, id) {
  var bots = dbConn.collection("robots").find({ "id": id });
  bots.each(function(err, doc) {
    assert.equal(err, null);
    if (doc != null) callback(doc);
  });
};

// var insertData = function(db, callback) {
//    db.collection('robots').insertMany(
//       data.users
//    , function(err, result) {
//     assert.equal(err, null);
//     console.log("Inserted a document into the robots collection.");
//     callback();
//   });
// };

// MongoClient.connect(url, function(err, db) {
//   assert.equal(null, err);
//   insertData(db, function() {
//       db.close();
//   });
// });

var findDocs = function(dbConn, callback) {
  var bots = dbConn.collection("robots").find();
  var docs = [];
  bots.each(function(err, doc) {
    assert.equal(err, null);
    if (doc != null) {
      docs.push(doc);
    } else {
      callback(docs);
    }
  });
};


app.get("/", function(req, res) {
  MongoClient.connect(url, function(err, dbConn) {
    assert.equal(null, err);
    findDocs(dbConn, function(data) {
      dbConn.close();
      res.render("index", { users: data });
    });
  });
});

app.listen(3000, function() {
  console.log("Start user directory listening on 3000");
});
